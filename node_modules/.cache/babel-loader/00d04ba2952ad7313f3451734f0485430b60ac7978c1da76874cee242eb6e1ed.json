{"ast":null,"code":"var _jsxFileName = \"E:\\\\React App\\\\reddit_clone\\\\src\\\\Components\\\\AddPost\\\\AddPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, createContext, useContext } from 'react';\nimport Post from '../Post/Post';\nimport './AddPost.css';\nimport { MyContext } from '../../App';\nimport { FaReddit } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPost = _ref => {\n  _s();\n  let {\n    newPost,\n    setNewPost\n  } = _ref;\n  const {\n    update,\n    setUpdate\n  } = useContext(MyContext);\n  const inputRef = useRef();\n  // const [upload, setUpload] = useState([]);\n  const handleClick = () => {\n    setUpdate([/*#__PURE__*/_jsxDEV(Post, {\n      post: inputRef.current.value\n    }, update.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), ...update]);\n    inputRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reddit_clone-addpost section__padding\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reddit_clone-addpost_input\",\n      children: [/*#__PURE__*/_jsxDEV(FaReddit, {\n        className: \"reddit_clone-addPost_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        placeholder: \"create post\",\n        onClick: () => setNewPost(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reddit_clone-addPost\",\n        onClick: handleClick,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPost, \"2M5u5BUkV7zFZoYgbjhnYhGH4u0=\");\n_c = AddPost;\nexport default AddPost;\nvar _c;\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["React","useRef","useState","createContext","useContext","Post","MyContext","FaReddit","jsxDEV","_jsxDEV","AddPost","_ref","_s","newPost","setNewPost","update","setUpdate","inputRef","handleClick","post","current","value","length","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","ref","placeholder","onClick","prev","_c","$RefreshReg$"],"sources":["E:/React App/reddit_clone/src/Components/AddPost/AddPost.jsx"],"sourcesContent":["import React, { useRef, useState, createContext, useContext } from 'react';\r\nimport Post from '../Post/Post';\r\nimport './AddPost.css';\r\nimport { MyContext } from '../../App';\r\nimport { FaReddit } from 'react-icons/fa';\r\nconst AddPost = ({ newPost, setNewPost }) => {\r\n  const { update, setUpdate } = useContext(MyContext);\r\n  const inputRef = useRef();\r\n  // const [upload, setUpload] = useState([]);\r\n  const handleClick = () => {\r\n    setUpdate([\r\n      <Post post={inputRef.current.value} key={update.length} />,\r\n      ...update,\r\n    ]);\r\n    inputRef.current.value = '';\r\n  };\r\n  return (\r\n    <div className=\"reddit_clone-addpost section__padding\">\r\n      <div className=\"reddit_clone-addpost_input\">\r\n        <FaReddit className=\"reddit_clone-addPost_icon\" />\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          placeholder=\"create post\"\r\n          onClick={() => setNewPost((prev) => !prev)}\r\n        />\r\n        <button className=\"reddit_clone-addPost\" onClick={handleClick}>\r\n          Add Post\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC1E,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,eAAe;AACtB,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,OAAO,GAAGC,IAAA,IAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACtC,MAAM;IAAEI,MAAM;IAAEC;EAAU,CAAC,GAAGZ,UAAU,CAACE,SAAS,CAAC;EACnD,MAAMW,QAAQ,GAAGhB,MAAM,CAAC,CAAC;EACzB;EACA,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBF,SAAS,CAAC,cACRP,OAAA,CAACJ,IAAI;MAACc,IAAI,EAAEF,QAAQ,CAACG,OAAO,CAACC;IAAM,GAAMN,MAAM,CAACO,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1D,GAAGX,MAAM,CACV,CAAC;IACFE,QAAQ,CAACG,OAAO,CAACC,KAAK,GAAG,EAAE;EAC7B,CAAC;EACD,oBACEZ,OAAA;IAAKkB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDnB,OAAA;MAAKkB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCnB,OAAA,CAACF,QAAQ;QAACoB,SAAS,EAAC;MAA2B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDjB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,GAAG,EAAEb,QAAS;QACdc,WAAW,EAAC,aAAa;QACzBC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAAEmB,IAAI,IAAK,CAACA,IAAI;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFjB,OAAA;QAAQkB,SAAS,EAAC,sBAAsB;QAACK,OAAO,EAAEd,WAAY;QAAAU,QAAA,EAAC;MAE/D;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BIF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}