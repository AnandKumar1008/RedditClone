{"ast":null,"code":"var _jsxFileName = \"E:\\\\React App\\\\reddit_clone\\\\src\\\\Components\\\\CreatePost\\\\PostText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { GrCircleInformation } from 'react-icons/gr';\nimport './PostText.css';\nimport Post from '../Post/Post';\n// const post_type=[{name}]\nimport { MyContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostText = props => {\n  _s();\n  const {\n    update,\n    setUpdate,\n    setNewPost\n  } = useContext(MyContext);\n  const {\n    post\n  } = props;\n  const [inp, setInp] = useState({\n    title: '',\n    textArea: ''\n  });\n  const handleChange = e => {\n    setInp({\n      ...inp,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePost = () => {\n    setUpdate([/*#__PURE__*/_jsxDEV(Post, {\n      title: inp.title,\n      textArea: inp.textArea\n    }, update.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), ...update]);\n    setNewPost(p => !p);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reddit_clone-post_type\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"title\",\n      maxLength: 300,\n      onChange: handleChange,\n      value: inp.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), post == 'img_video' ? /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"textArea\",\n      id: \"\",\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: post == 'link' ? 'Url' : 'Text(Optional)',\n      onChange: handleChange,\n      value: inp.textArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reddit_clone-post_type_buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \"type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" Spoiler\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" NFW\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reddit_clone-post_type_save\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SaveDraft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePost,\n        style: inp.title.length == 0 ? {\n          backgroundColor: 'var(--color-border)',\n          borderColor: 'var(--color-border)',\n          color: 'gray'\n        } : {},\n        disabled: inp.title.length == 0,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reddit_clone-post_type_notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reddit_clone-post_type_checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notification\",\n          children: \"Send me post reply notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connect Accounts to share your post \", /*#__PURE__*/_jsxDEV(GrCircleInformation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PostText, \"0llD7DURMxbQBgKEiH+Yy5U+Fxw=\");\n_c = PostText;\nexport default PostText;\nvar _c;\n$RefreshReg$(_c, \"PostText\");","map":{"version":3,"names":["React","useContext","useState","AiOutlinePlus","GrCircleInformation","Post","MyContext","jsxDEV","_jsxDEV","PostText","props","_s","update","setUpdate","setNewPost","post","inp","setInp","title","textArea","handleChange","e","target","name","value","handlePost","length","fileName","_jsxFileName","lineNumber","columnNumber","p","className","children","type","placeholder","maxLength","onChange","id","cols","rows","onClick","style","backgroundColor","borderColor","color","disabled","htmlFor","_c","$RefreshReg$"],"sources":["E:/React App/reddit_clone/src/Components/CreatePost/PostText.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { GrCircleInformation } from 'react-icons/gr';\r\nimport './PostText.css';\r\nimport Post from '../Post/Post';\r\n// const post_type=[{name}]\r\nimport { MyContext } from '../../App';\r\nconst PostText = (props) => {\r\n  const { update, setUpdate, setNewPost } = useContext(MyContext);\r\n  const { post } = props;\r\n  const [inp, setInp] = useState({\r\n    title: '',\r\n    textArea: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    setInp({ ...inp, [e.target.name]: e.target.value });\r\n  };\r\n  const handlePost = () => {\r\n    setUpdate([\r\n      <Post key={update.length} title={inp.title} textArea={inp.textArea} />,\r\n      ...update,\r\n    ]);\r\n    setNewPost((p) => !p);\r\n  };\r\n  return (\r\n    <div className=\"reddit_clone-post_type\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        name=\"title\"\r\n        maxLength={300}\r\n        onChange={handleChange}\r\n        value={inp.title}\r\n      />\r\n      {post == 'img_video' ? (\r\n        <img />\r\n      ) : (\r\n        <textarea\r\n          name=\"textArea\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          placeholder={post == 'link' ? 'Url' : 'Text(Optional)'}\r\n          onChange={handleChange}\r\n          value={inp.textArea}\r\n        ></textarea>\r\n      )}\r\n      <div className=\"reddit_clone-post_type_buttons\">\r\n        <button className=\"\">\r\n          <AiOutlinePlus />\r\n          type\r\n        </button>\r\n        <button>\r\n          <AiOutlinePlus /> Spoiler\r\n        </button>\r\n        <button>\r\n          <AiOutlinePlus /> NFW\r\n        </button>\r\n      </div>\r\n      <div className=\"reddit_clone-post_type_save\">\r\n        <button>SaveDraft</button>\r\n        <button\r\n          onClick={handlePost}\r\n          style={\r\n            inp.title.length == 0\r\n              ? {\r\n                  backgroundColor: 'var(--color-border)',\r\n                  borderColor: 'var(--color-border)',\r\n                  color: 'gray',\r\n                }\r\n              : {}\r\n          }\r\n          disabled={inp.title.length == 0}\r\n        >\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"reddit_clone-post_type_notification\">\r\n        <div className=\"reddit_clone-post_type_checkbox\">\r\n          <input type=\"checkbox\" id=\"notification\" />\r\n          <label htmlFor=\"notification\">Send me post reply notifications</label>\r\n        </div>\r\n        <p>\r\n          Connect Accounts to share your post <GrCircleInformation />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}